import alf.algorithms.ddpg_algorithm
import alf.trainers.off_policy_trainer

# environment config
NUM_PARALLEL_ENVIRONMENTS=1
create_environment.env_name="Pendulum-v0"
create_environment.num_parallel_environments=%NUM_PARALLEL_ENVIRONMENTS

# algorithm config
observation_spec=@get_observation_spec()
action_spec=@get_action_spec()

actor/ActorNetwork.input_tensor_spec=%observation_spec
actor/ActorNetwork.output_tensor_spec=%action_spec
actor/ActorNetwork.fc_layer_params=(100,100)
actor/Adam.learning_rate=1e-4

critic/CriticNetwork.input_tensor_spec=(%observation_spec, %action_spec)
critic/CriticNetwork.joint_fc_layer_params=(100,100)
critic/Adam.learning_rate=1e-3

DdpgAlgorithm.actor_network=@actor/ActorNetwork()
DdpgAlgorithm.critic_network=@critic/CriticNetwork()
DdpgAlgorithm.actor_optimizer=@actor/Adam()
DdpgAlgorithm.critic_optimizer=@critic/Adam()

DdpgAlgorithm.target_update_period=5
OneStepTDLoss.td_error_loss_fn=@losses.element_wise_huber_loss


import alf.algorithms.trac_algorithm
Agent.rl_algorithm_cls=@TracAlgorithm
TracAlgorithm.ac_algorithm_cls=@DdpgAlgorithm
TracAlgorithm.action_dist_clip_per_dim=0.01


# training config
TrainerConfig.trainer=@sync_off_policy_trainer
TrainerConfig.initial_collect_steps=1000
TrainerConfig.num_updates_per_train_step=1
TrainerConfig.mini_batch_length=2
TrainerConfig.unroll_length=1
TrainerConfig.mini_batch_size=64
TrainerConfig.whole_replay_buffer_training=False
TrainerConfig.algorithm_ctor=@Agent
TrainerConfig.checkpoint_interval=100000
TrainerConfig.num_iterations=20000
TrainerConfig.evaluate=1
TrainerConfig.eval_interval=200
TrainerConfig.debug_summaries=0
TrainerConfig.summarize_grads_and_vars=0
TrainerConfig.summary_interval=100

ReplayBuffer.max_length=100000




