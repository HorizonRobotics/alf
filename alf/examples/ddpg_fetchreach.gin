include 'ddpg.gin'

import alf.algorithms.agent
Agent.rl_algorithm_cls=@DdpgAlgorithm
TrainerConfig.algorithm_ctor=@Agent

import alf.utils.dist_utils
import alf.environments.suite_robotics

# environment config
create_environment.env_load_fn=@suite_robotics.load
create_environment.num_parallel_environments=38
create_environment.env_name='FetchReach-v1'

ObservationNormalizer.clipping=5.
TrainerConfig.data_transformer_ctor=@ObservationNormalizer

hidden_layers=(256, 256, 256)

AdamTF.lr=1e-3

# override algorithm and training config
actor/ActorNetwork.fc_layer_params=%hidden_layers
critic/CriticNetwork.joint_fc_layer_params=%hidden_layers
critic/CriticNetwork.use_naive_parallel_network=True

DdpgAlgorithm.actor_network_ctor=@actor/ActorNetwork
DdpgAlgorithm.critic_network_ctor=@critic/CriticNetwork
DdpgAlgorithm.actor_optimizer=@AdamTF()
DdpgAlgorithm.critic_optimizer=@AdamTF()
DdpgAlgorithm.rollout_random_action=0.3
DdpgAlgorithm.target_update_period=40

OneStepTDLoss.gamma=0.98

# training config
TrainerConfig.initial_collect_steps=10000
TrainerConfig.mini_batch_length=2
TrainerConfig.mini_batch_size=5000
TrainerConfig.unroll_length=50
TrainerConfig.num_updates_per_train_iter=40
TrainerConfig.num_iterations=0
TrainerConfig.num_env_steps=5000000
TrainerConfig.num_checkpoints=10
TrainerConfig.evaluate=True
TrainerConfig.eval_interval=200
TrainerConfig.num_eval_episodes=200
TrainerConfig.debug_summaries=True
TrainerConfig.summarize_grads_and_vars=1
TrainerConfig.summary_interval=20
TrainerConfig.use_rollout_state=True
TrainerConfig.replay_buffer_length=50000