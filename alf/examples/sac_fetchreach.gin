
include 'sac.gin'

import alf.utils.dist_utils

import alf.environments.suite_robotics

# environment config
create_environment.env_load_fn=@suite_robotics.load
create_environment.num_parallel_environments=5
create_environment.env_name='FetchReach-v1'

hidden_layers=(256, 256)

# override algorithm and training config
actor/ActorDistributionNetwork.input_tensor_spec=%observation_spec
actor/ActorDistributionNetwork.action_spec=%action_spec
actor/ActorDistributionNetwork.fc_layer_params=%hidden_layers
actor/ActorDistributionNetwork.continuous_projection_net_ctor=@NormalProjectionNetwork
NormalProjectionNetwork.state_dependent_std=True
NormalProjectionNetwork.scale_distribution=True
NormalProjectionNetwork.std_transform=@clipped_exp

AdamTF.lr=1e-3

critic/CriticNetwork.input_tensor_spec=(%observation_spec, %action_spec)
critic/CriticNetwork.joint_fc_layer_params=%hidden_layers

SacAlgorithm.actor_network=@actor/ActorDistributionNetwork()
SacAlgorithm.critic_network=@critic/CriticNetwork()
SacAlgorithm.actor_optimizer=@AdamTF()
SacAlgorithm.critic_optimizer=@AdamTF()
SacAlgorithm.alpha_optimizer=@AdamTF()
SacAlgorithm.use_parallel_network=True
sac/calc_default_target_entropy.min_prob=0.03
SacAlgorithm.target_entropy=@sac/calc_default_target_entropy
SacAlgorithm.target_update_tau=0.05


# training config
TrainerConfig.temporally_independent_train_step=True
TrainerConfig.initial_collect_steps=3000
TrainerConfig.mini_batch_length=2
TrainerConfig.mini_batch_size=256
TrainerConfig.unroll_length=1
TrainerConfig.num_updates_per_train_step=5
TrainerConfig.num_iterations=500000
TrainerConfig.num_checkpoints=50
TrainerConfig.evaluate=False
TrainerConfig.debug_summaries=True
TrainerConfig.summarize_grads_and_vars=0
TrainerConfig.summary_interval=300
TrainerConfig.use_rollout_state=True
TrainerConfig.replay_buffer_length=1000000