
import alf.algorithms.ddpg_algorithm
import alf.trainers.off_policy_trainer

# environment config
NUM_PARALLEL_ENVIRONMENTS=1
create_environment.env_name="Pendulum-v0"
create_environment.num_parallel_environments=%NUM_PARALLEL_ENVIRONMENTS

# algorithm config
create_ddpg_algorithm.actor_fc_layers=(100, 100)
create_ddpg_algorithm.critic_fc_layers=(100, 100)
create_ddpg_algorithm.actor_learning_rate=1e-4
create_ddpg_algorithm.critic_learning_rate=1e-3
create_ddpg_algorithm.actor_fc_layers=(400,300)
CriticNetwork.observation_fc_layer_params=(400,)
create_ddpg_algorithm.critic_fc_layers=(300,)
DdpgAlgorithm.target_update_period=5
OneStepTDLoss.td_error_loss_fn=@losses.element_wise_huber_loss

# training config

OffPolicyTrainer.initial_collect_steps=1000
OffPolicyTrainer.num_updates_per_train_step=1
OffPolicyTrainer.mini_batch_length=2
OffPolicyTrainer.unroll_length=1
OffPolicyTrainer.mini_batch_size=64
OffPolicyTrainer.clear_replay_buffer=False
Trainer.algorithm_ctor=@create_ddpg_algorithm
Trainer.checkpoint_interval=100000
Trainer.num_iterations=20000
Trainer.evaluate=1
Trainer.eval_interval=1000
Trainer.debug_summaries=1
Trainer.summarize_grads_and_vars=0
Trainer.summary_interval=100

TFUniformReplayBuffer.max_length=100000

train_eval.trainer_cls=@SyncOffPolicyTrainer


