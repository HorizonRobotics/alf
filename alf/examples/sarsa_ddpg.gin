# base config for DDPG training using SaraAlgorithm
import alf.algorithms.sarsa_algorithm

# algorithm config
observation_spec=@get_observation_spec()
action_spec=@get_action_spec()

actor/ActorNetwork.fc_layer_params=(256, 256)
SarsaAlgorithm.actor_network_ctor=@actor/ActorNetwork

actor/AdamTF.lr=3e-4
SarsaAlgorithm.actor_optimizer=@actor/AdamTF()

critic/CriticNetwork.joint_fc_layer_params=(256, 256)
SarsaAlgorithm.critic_network_ctor=@critic/CriticNetwork

critic/AdamTF.lr=1.5e-4
SarsaAlgorithm.critic_optimizer=@critic/AdamTF()
SarsaAlgorithm.target_update_tau=0.005
SarsaAlgorithm.target_update_period=1
SarsaAlgorithm.use_smoothed_actor=False

# training config
TrainerConfig.algorithm_ctor=@SarsaAlgorithm
TrainerConfig.whole_replay_buffer_training=False
TrainerConfig.debug_summaries=1
TrainerConfig.evaluate=1
TrainerConfig.epsilon_greedy=0.1
TrainerConfig.eval_interval=10000
TrainerConfig.summaries_flush_secs=10
TrainerConfig.initial_collect_steps=32000
TrainerConfig.mini_batch_length=1
TrainerConfig.mini_batch_size=16384
TrainerConfig.num_iterations=200000
TrainerConfig.num_updates_per_train_iter=1
TrainerConfig.summarize_grads_and_vars=1
TrainerConfig.summarize_action_distributions=1
TrainerConfig.summary_interval=1
TrainerConfig.unroll_length=1
TrainerConfig.use_rollout_state=True
TrainerConfig.replay_buffer_length=100000

create_environment.num_parallel_environments=1
